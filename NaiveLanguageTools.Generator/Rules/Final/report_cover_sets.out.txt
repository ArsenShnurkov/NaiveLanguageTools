RECURSIVE INFO:
---------------
LHS symbols = recursive trace of symbols (including automatically generated)

start_symbol[53] is not recursive
dot_identifier[54] = dot_identifier[54]
typename_list[55] = typename_list[55]
typename[56] = typename[56] -> typename_list[55]
grammar[57] is not recursive
grammar_elements[58] = grammar_elements[58]
grammar_elem[59] is not recursive
opt_ns_list[60] = opt_ns_list[60]
opt_id_list[61] = opt_id_list[61]
opt_types[62] = opt_types[62]
id_list[63] = id_list[63]
type_info[64] is not recursive
opt_taboo_group[65] = opt_taboo_group[65]
option[66] is not recursive
option_list[67] = option_list[67]
factory_name[68] is not recursive
factory_params[69] is not recursive
factory_extend[70] is not recursive
factory_info[71] is not recursive
opt_prec_entries[72] = opt_prec_entries[72]
id_list_spaced[73] = id_list_spaced[73]
rich_precedence_word[74] is not recursive
opt_rich_prec_word_list[75] = opt_rich_prec_word_list[75]
input_list[76] is not recursive
prec_entry[77] is not recursive
op_assoc[78] is not recursive
op_prec_entry[79] is not recursive
prec_entry_line[80] = prec_entry_line[80]
state_item[81] is not recursive
def_state_item[82] is not recursive
opt_mixed_state_list[83] = opt_mixed_state_list[83]
state_list[84] = state_list[84]
lex_pattern_expr[85] is not recursive
variable[86] is not recursive
single_lex_pattern[87] is not recursive
combo_lex_pattern[88] = combo_lex_pattern[88]
lex_pattern[89] is not recursive
opt_context[90] is not recursive
context_alt_list[91] = context_alt_list[91]
context_list[92] = context_list[92]
state_action[93] is not recursive
lex_item_group[94] is not recursive
opt_lex_items[95] = opt_lex_items[95]
code_mix[96] = code_mix[96]
macro_ctrl[97] is not recursive
code_macro[98] = code_macro[98] -> code_mix[96]
code_atom[99] is not recursive
code_body[100] = code_body[100]
braced_opt_code_body[101] is not recursive
dynamic_token[102] is not recursive
named_symbol[103] is not recursive
anon_symbol[104] is not recursive
symbol[105] is not recursive
deco_symbol[106] is not recursive
sym_list[107] = sym_list[107]
sym_list_block[108] = sym_list_block[108]
opt_repetition[109] is not recursive
repetition[110] is not recursive
group[111] = group[111] -> sym_list[107]
opt_group_list[112] is not recursive
opt_alt_action[113] is not recursive
alt[114] is not recursive
alt_list[115] = alt_list[115]
prod[116] is not recursive
opt_prod_list[117] = opt_prod_list[117]
__list___merged_op_prec_entry_assoc____[118] = __list___merged_op_prec_entry_assoc____[118]


COVERAGE INFO:
--------------
LHS symbol = symbols that are covered

IDENTIFIER[26] = IDENTIFIER[26]
DOT[32] = DOT[32]
COMMA[50] = COMMA[50]
QUESTION_MARK[31] = QUESTION_MARK[31]
LANGLE[37] = LANGLE[37]
RANGLE[38] = RANGLE[38]
USING[5] = USING[5]
END[22] = END[22]
TERMINALS[11] = TERMINALS[11]
TYPES[14] = TYPES[14]
NAMESPACE[6] = NAMESPACE[6]
SEMI[10] = SEMI[10]
OPTIONS[9] = OPTIONS[9]
LEXER[8] = LEXER[8]
PARSER[7] = PARSER[7]
TOKENS[15] = TOKENS[15]
INT[16] = INT[16]
PATTERNS[13] = PATTERNS[13]
STRING[47] = STRING[47]
PRECEDENCE[19] = PRECEDENCE[19]
STATES[17] = STATES[17]
SCANNING[21] = SCANNING[21]
PARSING[20] = PARSING[20]
HASH[45] = HASH[45]
PLUS[41] = PLUS[41]
MINUS[42] = MINUS[42]
OVERRIDE[18] = OVERRIDE[18]
LPAREN[35] = LPAREN[35]
RPAREN[36] = RPAREN[36]
COLON[27] = COLON[27]
ASTERISK[39] = ASTERISK[39]
REGEX[48] = REGEX[48]
EQ[28] = EQ[28]
VAR[12] = VAR[12]
EOF_ACTION[23] = EOF_ACTION[23]
PIPE[30] = PIPE[30]
RARROW[29] = RARROW[29]
CODE_PLACEHOLDER[52] = CODE_PLACEHOLDER[52]
LMACRO[49] = LMACRO[49]
RMACRO[4] = RMACRO[4]
CODE_SNIPPET[2] = CODE_SNIPPET[2]
LBRACE[51] = LBRACE[51]
RBRACE[3] = RBRACE[3]
ACCENT[44] = ACCENT[44]
PLUS_OPT[40] = PLUS_OPT[40]
PLUSPLUS[43] = PLUSPLUS[43]
LBRACKET[33] = LBRACKET[33]
RBRACKET[34] = RBRACKET[34]
EMPTY[25] = EMPTY[25]
MARK[24] = MARK[24]
AT[46] = AT[46]
start_symbol[53] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],END[22],EOF_ACTION[23],EQ[28],HASH[45],IDENTIFIER[26],INT[16],LANGLE[37],LBRACE[51],LBRACKET[33],LEXER[8],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],NAMESPACE[6],OPTIONS[9],OVERRIDE[18],PARSER[7],PARSING[20],PATTERNS[13],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],PRECEDENCE[19],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],REGEX[48],RMACRO[4],RPAREN[36],SCANNING[21],SEMI[10],STATES[17],STRING[47],TERMINALS[11],TOKENS[15],TYPES[14],USING[5],VAR[12]
dot_identifier[54] = DOT[32],IDENTIFIER[26]
typename_list[55] = COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],QUESTION_MARK[31],RANGLE[38]
typename[56] = COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],QUESTION_MARK[31],RANGLE[38]
grammar[57] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],END[22],EOF_ACTION[23],EQ[28],HASH[45],IDENTIFIER[26],INT[16],LANGLE[37],LBRACE[51],LBRACKET[33],LEXER[8],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],NAMESPACE[6],OPTIONS[9],OVERRIDE[18],PARSER[7],PARSING[20],PATTERNS[13],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],PRECEDENCE[19],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],REGEX[48],RMACRO[4],RPAREN[36],SCANNING[21],SEMI[10],STATES[17],STRING[47],TERMINALS[11],TOKENS[15],TYPES[14],USING[5],VAR[12]
grammar_elements[58] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],END[22],EOF_ACTION[23],EQ[28],HASH[45],IDENTIFIER[26],INT[16],LANGLE[37],LBRACE[51],LBRACKET[33],LEXER[8],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],NAMESPACE[6],OPTIONS[9],OVERRIDE[18],PARSER[7],PARSING[20],PATTERNS[13],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],PRECEDENCE[19],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],REGEX[48],RMACRO[4],RPAREN[36],SCANNING[21],SEMI[10],STATES[17],STRING[47],TERMINALS[11],TOKENS[15],TYPES[14],USING[5],VAR[12]
grammar_elem[59] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],END[22],EOF_ACTION[23],EQ[28],HASH[45],IDENTIFIER[26],INT[16],LANGLE[37],LBRACE[51],LBRACKET[33],LEXER[8],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],NAMESPACE[6],OPTIONS[9],OVERRIDE[18],PARSER[7],PARSING[20],PATTERNS[13],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],PRECEDENCE[19],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],REGEX[48],RMACRO[4],RPAREN[36],SCANNING[21],SEMI[10],STATES[17],STRING[47],TERMINALS[11],TOKENS[15],TYPES[14],USING[5],VAR[12]
opt_ns_list[60] = COMMA[50],DOT[32],IDENTIFIER[26]
opt_id_list[61] = COMMA[50],IDENTIFIER[26]
opt_types[62] = COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],QUESTION_MARK[31],RANGLE[38],SEMI[10]
id_list[63] = COMMA[50],IDENTIFIER[26]
type_info[64] = COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],QUESTION_MARK[31],RANGLE[38],SEMI[10]
opt_taboo_group[65] = HASH[45],IDENTIFIER[26]
option[66] = IDENTIFIER[26],MINUS[42],PLUS[41]
option_list[67] = COMMA[50],IDENTIFIER[26],MINUS[42],PLUS[41]
factory_name[68] = IDENTIFIER[26],OVERRIDE[18]
factory_params[69] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],IDENTIFIER[26],LPAREN[35],OVERRIDE[18],RPAREN[36]
factory_extend[70] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],LPAREN[35],OVERRIDE[18],QUESTION_MARK[31],RANGLE[38],RPAREN[36]
factory_info[71] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],IDENTIFIER[26],LANGLE[37],LBRACE[51],LPAREN[35],OVERRIDE[18],QUESTION_MARK[31],RANGLE[38],RBRACE[3],RPAREN[36]
opt_prec_entries[72] = COMMA[50],IDENTIFIER[26],LPAREN[35],RPAREN[36],SEMI[10]
id_list_spaced[73] = IDENTIFIER[26]
rich_precedence_word[74] = IDENTIFIER[26],LPAREN[35],RPAREN[36]
opt_rich_prec_word_list[75] = IDENTIFIER[26],LPAREN[35],RPAREN[36]
input_list[76] = IDENTIFIER[26],LPAREN[35],RPAREN[36]
prec_entry[77] = IDENTIFIER[26],LPAREN[35],RPAREN[36]
op_assoc[78] = IDENTIFIER[26]
op_prec_entry[79] = IDENTIFIER[26],LPAREN[35],RPAREN[36]
prec_entry_line[80] = COMMA[50],IDENTIFIER[26],LPAREN[35],RPAREN[36],SEMI[10]
state_item[81] = IDENTIFIER[26]
def_state_item[82] = ASTERISK[39],IDENTIFIER[26]
opt_mixed_state_list[83] = ASTERISK[39],COMMA[50],IDENTIFIER[26]
state_list[84] = ASTERISK[39],IDENTIFIER[26]
lex_pattern_expr[85] = REGEX[48],STRING[47]
variable[86] = EQ[28],IDENTIFIER[26],REGEX[48],SEMI[10],STRING[47],VAR[12]
single_lex_pattern[87] = IDENTIFIER[26],REGEX[48],STRING[47]
combo_lex_pattern[88] = IDENTIFIER[26],PLUS[41],REGEX[48],STRING[47]
lex_pattern[89] = EOF_ACTION[23],IDENTIFIER[26],PLUS[41],REGEX[48],STRING[47]
opt_context[90] = IDENTIFIER[26],LPAREN[35],PIPE[30],RPAREN[36]
context_alt_list[91] = IDENTIFIER[26],PIPE[30]
context_list[92] = IDENTIFIER[26]
state_action[93] = IDENTIFIER[26],MINUS[42],PLUS[41]
lex_item_group[94] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COMMA[50],EOF_ACTION[23],IDENTIFIER[26],LBRACE[51],LPAREN[35],MINUS[42],PIPE[30],PLUS[41],RARROW[29],RBRACE[3],REGEX[48],RPAREN[36],SEMI[10],STRING[47]
opt_lex_items[95] = ASTERISK[39],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COMMA[50],EOF_ACTION[23],EQ[28],IDENTIFIER[26],LBRACE[51],LPAREN[35],MINUS[42],PIPE[30],PLUS[41],RARROW[29],RBRACE[3],REGEX[48],RPAREN[36],SEMI[10],STRING[47],VAR[12]
code_mix[96] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],IDENTIFIER[26],LMACRO[49],RMACRO[4]
macro_ctrl[97] = CODE_PLACEHOLDER[52],IDENTIFIER[26]
code_macro[98] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],IDENTIFIER[26],LMACRO[49],RMACRO[4]
code_atom[99] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],IDENTIFIER[26]
code_body[100] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],IDENTIFIER[26]
braced_opt_code_body[101] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],IDENTIFIER[26],LBRACE[51],RBRACE[3]
dynamic_token[102] = IDENTIFIER[26],STRING[47]
named_symbol[103] = ACCENT[44],COLON[27],HASH[45],IDENTIFIER[26],STRING[47]
anon_symbol[104] = ACCENT[44],HASH[45],IDENTIFIER[26],STRING[47]
symbol[105] = ACCENT[44],COLON[27],HASH[45],IDENTIFIER[26],STRING[47]
deco_symbol[106] = ACCENT[44],ASTERISK[39],COLON[27],HASH[45],IDENTIFIER[26],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],STRING[47]
sym_list[107] = ACCENT[44],ASTERISK[39],COLON[27],COMMA[50],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACKET[33],LPAREN[35],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACKET[34],RPAREN[36],STRING[47]
sym_list_block[108] = ACCENT[44],ASTERISK[39],COLON[27],COMMA[50],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACKET[33],LPAREN[35],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACKET[34],RPAREN[36],STRING[47]
opt_repetition[109] = ASTERISK[39],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31]
repetition[110] = ASTERISK[39],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31]
group[111] = ACCENT[44],ASTERISK[39],COLON[27],COMMA[50],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACKET[33],LPAREN[35],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACKET[34],RPAREN[36],STRING[47]
opt_group_list[112] = ACCENT[44],ASTERISK[39],COLON[27],COMMA[50],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACKET[33],LPAREN[35],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACKET[34],RPAREN[36],STRING[47]
opt_alt_action[113] = CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],IDENTIFIER[26],LBRACE[51],LMACRO[49],RBRACE[3],RMACRO[4]
alt[114] = ACCENT[44],ASTERISK[39],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],EMPTY[25],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACE[51],LBRACKET[33],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACE[3],RBRACKET[34],RMACRO[4],RPAREN[36],STRING[47]
alt_list[115] = ACCENT[44],ASTERISK[39],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],EMPTY[25],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACE[51],LBRACKET[33],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RBRACE[3],RBRACKET[34],RMACRO[4],RPAREN[36],STRING[47]
prod[116] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACE[51],LBRACKET[33],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],RMACRO[4],RPAREN[36],SEMI[10],STRING[47]
opt_prod_list[117] = ACCENT[44],ASTERISK[39],AT[46],CODE_PLACEHOLDER[52],CODE_SNIPPET[2],COLON[27],COMMA[50],DOT[32],EMPTY[25],HASH[45],IDENTIFIER[26],LANGLE[37],LBRACE[51],LBRACKET[33],LMACRO[49],LPAREN[35],MARK[24],MINUS[42],PIPE[30],PLUS[41],PLUS_OPT[40],PLUSPLUS[43],QUESTION_MARK[31],RANGLE[38],RARROW[29],RBRACE[3],RBRACKET[34],RMACRO[4],RPAREN[36],SEMI[10],STRING[47]
__list___merged_op_prec_entry_assoc____[118] = IDENTIFIER[26]
